// Code generated by mockery v2.7.4. DO NOT EDIT.

package mocks

import (
	context "context"
	dtos "vwap/pkg/dtos"

	mock "github.com/stretchr/testify/mock"
)

// VWAPHandler is an autogenerated mock type for the VWAPHandler type
type VWAPHandler struct {
	mock.Mock
}

// Close provides a mock function with given fields:
func (_m *VWAPHandler) Close() {
	_m.Called()
}

// Subscribe provides a mock function with given fields: ctx, productIds
func (_m *VWAPHandler) Subscribe(ctx context.Context, productIds ...string) (<-chan *dtos.ProductAvgs, error) {
	_va := make([]interface{}, len(productIds))
	for _i := range productIds {
		_va[_i] = productIds[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 <-chan *dtos.ProductAvgs
	if rf, ok := ret.Get(0).(func(context.Context, ...string) <-chan *dtos.ProductAvgs); ok {
		r0 = rf(ctx, productIds...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(<-chan *dtos.ProductAvgs)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, ...string) error); ok {
		r1 = rf(ctx, productIds...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
